
__meta__:

  program-name: boss
  default-config: /etc/bossd.yaml
  environ-filename: BOSS_CONFIG
  description: |
    Process supervisor and control utilities
  has-arguments: yes
  mixed-arguments: no
  c_include:
  - entry.h


__types__:

  file:
    __tags__:
      __property__: type
      __default__: File
      File: 0
      Tcp: 1
      UnixSocket: 2
    path: !String
      default: ""
      description: >
        Path to the unix socket or file to open
    flags: !String
      default: ""
      description: >
        Flags for file opening. In stdlib's format
        (only "r", "r+", "w", "w+", "a" are supported)
    mode: !Int
      default: 0700
      description: >
        Mode to chmod file or unix socket after opening. 0700 by default.
    host: !String
      default: ""
      description: >
        Host to bind tcp socket to. Only IPv4 addresses (and not hostnames)
        are supported so far.
    port: !UInt
      default: 0
      min: 1
      max: 65535
      description: >
        Port to bind tcp socket to (can be < 1024 is boss is run as root). By
        default is zero, which means dynamically alocated port.
    _fd: !Int
      default: -1

  process:
    tags: !Array
      element: !String
      description: hello
    min-instances: !Int
      default: 1
      min: 1
      max: 1000000
      description:
        Minimum processes of this kind to start and keep running
    max-instances: !Int
      default: 1
      min: 1
      max: 1000000
      description: >
        Maximum processes of this kind to start and keep running. If there are
        more that this number of processes running when recovering, some of
        processes will be killed.
    spare-kill-signal: !Int
      default: 15
      min: 1
      max: 15
      description: >
        Signal to kill process when there are excessive number of instances.
        Same signal is sent on `decr` command from `bossctl`.
    enable-subst: !Bool
      default: yes
      descripton: >
        Enable substitution of @(variables) inside arguments. Two implemented
        so far are `seq0` and `seq1` are 0- and 1-based index of process among
        instances of the same process. It's minimal number of the process, with
        guaranty that no duplicates are simultaneously running. But in case of
        some processes are dead, sequence numbers can have gaps inside.
    user: !String
      description: >
        User name or uid to setuid before starting (and after bindding
        sockets). Ignored when not running as root.
    group: !String
      description: >
        Group name or gid to setuid before starting (and after bindding
        sockets). Ignored when not running as root.
    chroot: !String
      description: >
        Path for chroot to jail process before starting (and after binding
        sockets). Ignored when not running as root.
    limits:
      core: !UInt
        default: 0
        description: >
          Maximum size of core file in bytes (see man setrlimit)
      cpu: !UInt
        default: 0
        description: >
          Maximum amount of CPU time in seconds (see man setrlimit)
      data: !UInt
        default: 0
        description: >
          Maximum size of process' data segment (see man setrlimit)
      fsize: !UInt
        default: 0
        description: >
          Maximum size file created by a process (see man setrlimit)
      nofile: !UInt
        default: 0
        description: >
          Maximum number of file descriptors (see man setrlimit)
      stack: !UInt
        default: 0
        description: >
          Maximum size of process' stack in bytes (see man setrlimit)
      as: !UInt
        default: 0
        description: >
          Maximum address space size for a process (see man setrlimit)
    executable-path: !File
      description: >
        Path to executable to run. Full path is used for security
    arguments: !Array
      element: !String ~
      description: >
        Arguments of the executable. Including name of the executable itself
        (or in other words arguments starting with argv[0]).
    work-dir: !String
      description: >
        Working directory for running command.
    umask: !UInt
      default: 0
      description: >
        Umask to set for the process.
    environ: !Mapping
      key-element: !String
      value-element: !String
      description: >
        Process' environment
    files: !Mapping
      key-element: !Int ~
      value-element: !Struct file
      description: >
        Files to open before setuid and exec. Useful to open files as root and
        then dropping privileges. This is a mapping from descriptor number to
        a file definition structure.
    _entries: !CType process_entries_t
    _name: !String

bossrun:
  failfast: !Bool
    default: no
    description: >
      Fail (and stop all processes) if one of the processes dies. Overrides
      restart option.
    command-line-enable: [-F, --failfast]
    command-line-disable: [-f, --no-fail]
  failfast-message: !String
    default: >
      Stoping because "%s" (pid %d) is dead on signal %d or with code %d
    description: >
      Message to print when stopping supervisor. Can contain following
      substitutions: %1$s -- process name, %2$d -- pid of the process,
      %3$d -- signal by which process is stopped, %4$d -- return value
      (if not stopped by signal).
  restart: !Bool
    default: no
    description: >
      Restart if one of the processes dies.
    command-line-enable: [-R, --restart]
    command-line-disable: [-r, --no-restart]
  fifo: !File
    default: ".bossctl"
    environ-var: BOSSRUN_CONTROL
    description: >
      Filename of the fifo to read control messages from
  stop-signals:
    sigint: !Bool
      default: yes
      description: >
        Stop all processes when SIGINT received
    sigterm: !Bool
      default: yes
      description: >
        Stop all processes when SIGTERM received
    sigquit: !Bool
      default: yes
      description: >
        Stop all processes when SIGQUIT received
    sighup: !Bool
      default: no
      description: >
        Stop all processes when SIGHUP received

bossd:
  fifo: !File
    default: "/var/run/boss/fifo"
    description: >
      Filename of the fifo to read control messages from
  pid-file: !File
    default: "/var/run/boss/bossd.pid"
    description: >
      Filename of the pid file of bossd daemon
  logging:
    file: !File
      default: "/var/log/boss/bossd.log"
      description: >
        Filename of the main log file of bossd
    mode: !Int
      default: 0644
      description: >
        Mode of the file creation (by default all users can read, unless your
        umask is more strict)
    rotation-size: !Int
      min: 4096
      default: 1Mi
      description: >
        Maximum log file size in bytes (rought length, can be slightly longer)
    rotation-time: !Int
      min: 60
      default: 604800
      description: >
        Maximum log file live time in seconds (by default one week)
    rotation-backups: !Int
      min: 1
      default: 9
      description: >
        Number of old log files to be kept while rotating
  timeouts:
    successful-run: !Float
      min: 0.1
      default: 10
      description: >
        Program running at least this number of seconds is considered
        successful. Which means it will be restarted immediately.
    small-restart: !Float
      min: 0.001
      default: 0.1
      description: >
        Timeout to restart program after first few unsuccessful runs
    retries: !Float
      min: 1
      default: 2
      description: >
        Number of times to try to restart dead process within the small restart
        timeout
    big-restart: !Float
      min: 0.1
      default: 120
      description: >
        Program which didn't start specified number of retries, will be tried
        later after specified number of seconds

Processes: !Mapping
  key-element: !String
    description: >
      Process name
  value-element: !Struct process

